gcc: poison-system-directories

Patch by Ishimoto Shinobu
Based on Khem Raj's work

diff -ruN gcc-9.1.0-orig/gcc/common.opt gcc-9.1.0/gcc/common.opt
--- gcc-9.1.0-orig/gcc/common.opt	2019-03-09 18:28:04.000000000 +0900
+++ gcc-9.1.0/gcc/common.opt	2019-05-03 21:14:32.246010724 +0900
@@ -684,6 +684,10 @@
 Common Var(warn_return_local_addr) Init(1) Warning
 Warn about returning a pointer/reference to a local or temporary variable.
 
+Wpoison-system-directories
+Common Var(flag_poison_system_directories) Init(1) Warning
+Warn for -I and -L options using system directories if cross compiling
+
 Wshadow
 Common Var(warn_shadow) Warning
 Warn when one variable shadows another.  Same as -Wshadow=global.
diff -ruN gcc-9.1.0-orig/gcc/config.in gcc-9.1.0/gcc/config.in
--- gcc-9.1.0-orig/gcc/config.in	2019-05-03 17:01:59.000000000 +0900
+++ gcc-9.1.0/gcc/config.in	2019-05-03 21:15:21.820919133 +0900
@@ -199,6 +199,11 @@
 #undef ENABLE_PLUGIN
 #endif
 
+/* Define to warn for use of native system header directories */
+#ifndef USED_FOR_TARGET
+#undef ENABLE_POISON_SYSTEM_DIRECTORIES
+#endif
+
 
 /* Define if you want all operations on RTL (the basic data structure of the
    optimizer and back end) to be checked for dynamic type safety at runtime.
diff -ruN gcc-9.1.0-orig/gcc/configure gcc-9.1.0/gcc/configure
--- gcc-9.1.0-orig/gcc/configure	2019-04-15 16:39:20.000000000 +0900
+++ gcc-9.1.0/gcc/configure	2019-05-03 21:17:28.393581249 +0900
@@ -995,6 +995,7 @@
 enable_maintainer_mode
 enable_link_mutex
 enable_version_specific_runtime_libs
+enable_poison_system_directories
 enable_plugin
 enable_host_shared
 enable_libquadmath_support
@@ -1748,6 +1749,8 @@
   --enable-version-specific-runtime-libs
                           specify that runtime libraries should be installed
                           in a compiler-specific directory
+  --enable-poison-system-directories
+                          warn for use of native system header directories
   --enable-plugin         enable plugin support
   --enable-host-shared    build host code as shared libraries
   --disable-libquadmath-support
@@ -29753,6 +29756,18 @@
   enableval=$enable_version_specific_runtime_libs;
 fi
 
+# Check whether --enable-poison-system-directories was given.
+if test "${enable_poison_system_directories+set}" = set; then :
+  enableval=$enable_poison_system_directories;
+else
+  enable_poison_system_directories=no
+fi
+
+if test "x${enable_poison_system_directories}" = "xyes"; then
+
+$as_echo "#define ENABLE_POISON_SYSTEM_DIRECTORIES 1" >>confdefs.h
+
+fi
 
 # Substitute configuration variables
 
diff -ruN gcc-9.1.0-orig/gcc/configure.ac gcc-9.1.0/gcc/configure.ac
--- gcc-9.1.0-orig/gcc/configure.ac	2019-04-15 16:39:20.000000000 +0900
+++ gcc-9.1.0/gcc/configure.ac	2019-05-03 21:18:06.432364222 +0900
@@ -6382,6 +6382,16 @@
                 [specify that runtime libraries should be
                  installed in a compiler-specific directory])])
 
+AC_ARG_ENABLE([poison-system-directories],
+             AS_HELP_STRING([--enable-poison-system-directories],
+                            [warn for use of native system header directories]),,
+             [enable_poison_system_directories=no])
+if test "x${enable_poison_system_directories}" = "xyes"; then
+  AC_DEFINE([ENABLE_POISON_SYSTEM_DIRECTORIES],
+           [1],
+           [Define to warn for use of native system header directories])
+fi
+
 # Substitute configuration variables
 AC_SUBST(subdirs)
 AC_SUBST(srcdir)
diff -ruN gcc-9.1.0-orig/gcc/doc/invoke.texi gcc-9.1.0/gcc/doc/invoke.texi
--- gcc-9.1.0-orig/gcc/doc/invoke.texi	2019-04-23 19:03:41.000000000 +0900
+++ gcc-9.1.0/gcc/doc/invoke.texi	2019-05-03 21:18:53.386896977 +0900
@@ -332,6 +332,7 @@
 -Wpacked  -Wpacked-bitfield-compat -Wpacked-not-aligned  -Wpadded @gol
 -Wparentheses  -Wno-pedantic-ms-format @gol
 -Wplacement-new  -Wplacement-new=@var{n} @gol
+-Wno-poison-system-directories @gol
 -Wpointer-arith  -Wpointer-compare  -Wno-pointer-to-int-cast @gol
 -Wno-pragmas  -Wno-prio-ctor-dtor  -Wredundant-decls @gol
 -Wrestrict  -Wno-return-local-addr @gol
@@ -6289,6 +6290,14 @@
 most targets, it is made up of code and thus requires the stack to be
 made executable in order for the program to work properly.
 
+@item -Wno-poison-system-directories
+@opindex Wno-poison-system-directories
+Do not warn for @option{-I} or @option{-L} options using system
+directories such as @file{/usr/include} when cross compiling.  This
+option is intended for use in chroot environments when such
+directories contain the correct headers and libraries for the target
+system rather than the host.
+
 @item -Wfloat-equal
 @opindex Wfloat-equal
 @opindex Wno-float-equal
diff -ruN gcc-9.1.0-orig/gcc/gcc.c gcc-9.1.0/gcc/gcc.c
--- gcc-9.1.0-orig/gcc/gcc.c	2019-03-11 22:58:44.000000000 +0900
+++ gcc-9.1.0/gcc/gcc.c	2019-05-03 21:19:36.577578788 +0900
@@ -1042,6 +1042,8 @@
    "%{fuse-ld=*:-fuse-ld=%*} " LINK_COMPRESS_DEBUG_SPEC \
    "%X %{o*} %{e*} %{N} %{n} %{r}\
     %{s} %{t} %{u*} %{z} %{Z} %{!nostdlib:%{!r:%{!nostartfiles:%S}}} \
+    %{Wno-poison-system-directories:--no-poison-system-directories} \
+    %{Werror=poison-system-directories:--error-poison-system-directories} \
     %{static|no-pie|static-pie:} %@{L*} %(mfwrap) %(link_libgcc) " \
     VTABLE_VERIFICATION_SPEC " " SANITIZER_EARLY_SPEC " %o "" \
     %{fopenacc|fopenmp|%:gt(%{ftree-parallelize-loops=*:%*} 1):\
diff -ruN gcc-9.1.0-orig/gcc/incpath.c gcc-9.1.0/gcc/incpath.c
--- gcc-9.1.0-orig/gcc/incpath.c	2019-01-01 21:31:55.000000000 +0900
+++ gcc-9.1.0/gcc/incpath.c	2019-05-03 21:20:54.647264644 +0900
@@ -26,6 +26,7 @@
 #include "intl.h"
 #include "incpath.h"
 #include "cppdefault.h"
+#include "diagnostic-core.h"
 
 /* Microsoft Windows does not natively support inodes.
    VMS has non-numeric inodes.  */
@@ -393,6 +394,25 @@
 	}
       fprintf (stderr, _("End of search list.\n"));
     }
+#ifdef ENABLE_POISON_SYSTEM_DIRECTORIES
+  if (flag_poison_system_directories)
+    {
+       struct cpp_dir *p;
+
+       for (p = heads[INC_QUOTE]; p; p = p->next)
+         {
+          if ((!strncmp (p->name, "/usr/include", 12))
+              || (!strncmp (p->name, "/usr/local/include", 18))
+              || (!strncmp (p->name, "/usr/X11R6/include", 18))
+              || (!strncmp (p->name, "/sw/include", 11))
+              || (!strncmp (p->name, "/opt/include", 12)))
+            warning (OPT_Wpoison_system_directories,
+                     "include location \"%s\" is unsafe for "
+                     "cross-compilation",
+                     p->name);
+         }
+    }
+#endif
 }
 
 /* Use given -I paths for #include "..." but not #include <...>, and
