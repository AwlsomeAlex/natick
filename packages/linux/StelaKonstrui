# vim: tabstop=4: shiftwidth=4: expandtab: set filetype=bash:
##############################
# briko Build Script - linux # 
##############################
# Copyright (C) 2020 Alexander Barris <awlsomealex at protonmail dot com>
# All Rights Reserved
# Licensed under ISC License 
##############################

# Name:         linux
# Description:  The all-powerful Linux Kernel
# URL:          https://kernel.org
# License:      GNU GPLv2
# Maintainer:   AwlsomeAlex
# Section:      kerno

pkg_name=linux
pkg_version=5.6.7
pkg_src=("https://mirror.math.princeton.edu/pub/kernel/linux/kernel/v5.x/linux-${pkg_version}.tar.xz") # My Closest Mirror in NJ
#pkg_src=("https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-${pkg_version}.tar.xz")
pkg_checksum=("23a0420f29eacb66d71f86f64fbd35a1b6ff617d520e3e05f3e1f537d46692ca")
pkg_deps=()

konstruu() {
    # Kernel Architecture
    case ${BARCH} in
        x86_64)
            export SUBKARCH="x86"
            export XKARCH="x86_64"
            export DEFCONFIG="x86_64_defconfig"
            ;;
        i686|i586)
            export SUBKARCH="x86"
            export XKARCH="i386"
            export DEFCONFIG="i386_defconfig"
            ;;
    esac

    # Image File Location
    image_file="arch/${SUBKARCH}/boot/bzImage"

    # Generate Kernel Config
    make ARCH=${XKARCH} CROSS_COMPILE=${CROSS_COMPILE} ${DEFCONFIG} ${MAKEFLAGS} &>> ${LOG}

    # Set Configuration Variables
    sed -i "s/.*CONFIG_DEFAULT_HOSTNAME.*/CONFIG_DEFAULT_HOSTNAME=\"stelalinux\"/" .config  # Changes Hostname
    sed -i 's:# CONFIG_LOCALVERSION is not set :CONFIG_LOCALVERSION="-stela":g' .config     # Adds -stela to Kernel Version
    sed -i "s/.*\\(CONFIG_KERNEL_.*\\)=y/\\#\\ \\1 is not set/" .config                     # Resets compression
    sed -i "s/.*CONFIG_KERNEL_XZ.*/CONFIG_KERNEL_XZ=y/" .config                             # Defaults to xz compression
    sed -i "s/.*CONFIG_FB_VESA.*/CONFIG_FB_VESA=y/" .config                                 # Enables VESA Framebuffer
    sed -i 's:# CONFIG_UEVENT_HELPER is not set:CONFIG_UEVENT_HELPER=y:g' .config           # Enable mdev support
    echo 'CONFIG_UEVENT_HELPER_PATH=""' >> .config                                          # Set mdev path to '' (Set by xiongnu)
    sed -i "s/.*CONFIG_LOGO_LINUX_CLUT224.*/CONFIG_LOGO_LINUX_CLUT224=y/" .config           # Show Linux Kernel Logo on boot
    sed -i "s/^CONFIG_DEBUG_KERNEL.*/\\# CONFIG_DEBUG_KERNEL is not set/" .config           # Disable debug symbols (smaller kernel binary)
    sed -i "s/.*CONFIG_EFI_STUB.*/CONFIG_EFI_STUB=y/" .config                               # Enable EFI stub
    echo "CONFIG_RESET_ATTACK_MITIGATION=y" >> .config                                      # Requests RAM clearing after reboot (Attack Migration)
    echo "CONFIG_APPLE_PROPERTIES=n" >> .config                                             # Disable Mac Properties
    if [[ ${BARCH} == 'x86_64' ]]; then
        echo -e "${GREEN}64-bit Detected ${NC}"
        echo "CONFIG_EFI_MIXED=y" >> .config                                                # Enable Mixed EFI
    elif [[ ${BARCH} == 'i586' ]]; then
        echo -e "${GREEN}32-bit (no SSE2) Detected ${NC}"
        sed -i 's:CONFIG_M686=y:# CONFIG_M686 is not set:g' .config                         # Turn off i686 target
        sed -i 's:# CONFIG_M586 is not set:CONFIG_M586=y:g' .config                         # Turn on i586 target
    elif [[ ${BARCH} == 'i686' ]]; then
        echo -e "${GREEN}32-bit Detected ${NC}"
    else
        echo -e "${RED}[FAIL] ${NC}Unknown Kernel Architecture: ${BARCH}"
        exit 1
    fi

    unset LDFLAGS

    # Compile Linux Kernel
    make ARCH=${XKARCH} CROSS_COMPILE=${CROSS_COMPILE} CFLAGS="$CFLAGS" bzImage ${MAKEFLAGS} &>> ${LOG}

    # Install to [fs]/boot
    mkdir ${fs}/boot
    cp -r ${image_file} ${fs}/boot/kernel.xz &>> ${LOG}
}
