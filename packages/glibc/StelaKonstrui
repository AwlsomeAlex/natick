################################
#------------------------------#
# StelaKonstrui Script - glibc #
#------------------------------#
################################
#
# Description:  The GNU C Library (glibc)
# URL:          https://gnu.org/software/libc
# Maintainer:   AwlsomeAlex
# Section:      kerno
#

# ----- Package Information ----- #
PKG_NAME=glibc
PKG_VERSION=2.30
PKG_SRC=("https://ftp.gnu.org/gnu/glibc/glibc-$PKG_VERSION.tar.xz")
PKG_DEPS=()

# ----- Build Function ----- #
build_glibc() {
    
    #-----------------------------#
    # ----- Local Variables ----- #
    #-----------------------------#
    
    # GlibC Source Directory
    GLIBC_SRC=$WORK_DIR/glibc-*

    # GlibC Object Directory
    GLIBC_OBJ=$WORK_DIR/glibc-object

    # GlibC Dummy Install Directory
    GLIBC_FULL=$WORK_DIR/glibc.fs_full

    # so.0 Libraries
    SO0=("libpthread")

    # so.1 Libraries
    SO1=("libBrokenLocale" "libanl" "libcrypt" "libnsl" "librt" "libthread_db" "libutil")

    # so.2 Libraries
    SO2=("libdl" "libnss_db" "libnss_dns" "libnss_files" "libnss_hesiod" "libresolv")

    # so.6 Libraries
    SO6=("libm" "libc")

    #---------------------------#
    # ----- Configuration ----- #
    #---------------------------#
   
    # Create GlibC Object Directory and Dummy FS
    mkdir -p $GLIBC_OBJ
    mkdir -p $GLIBC_FULL

    # Configure GlibC in GLIBC_OBJ
    cd $GLIBC_OBJ

    sed -i '/asm.socket.h/a# include <linux/sockios.h>' $GLIBC_SRC/sysdeps/unix/sysv/linux/bits/socket.h
 
    BUILD_CC="$HOSTCC" \
    CC="$XTARGET-gcc" \
    AR="$XTARGET-ar" \
    RANLIB="$XTARGET-ranlib" \
    $GLIBC_SRC/configure \
        --prefix=/usr \
        --libdir=/usr/lib \
        --libexecdir=/usr/lib \
        --build=$XHOST \
        --host=$XTARGET $GLIBC_ARGS \
        --with-binutils=$TFIN_DIR/bin \
        --with-headers=$TROOT_DIR/usr/include \
        --without-gd \
        --without-selinux \
        --enable-add-ons \
        --enable-bind-now \
        --enable-lock-elision \
        --enable-stack-protector=strong \
        --enable-stackguard-randomization \
        --disable-profile \
        --disable-werror \
        libc_cv_slibdir=/lib

    #-----------------------#
    # ----- Compiling ----- #
    #-----------------------#

    # Compile GlibC
    make -j1
    
    #---------------------#
    # ----- Install ----- #
    #---------------------#
    
    # Install to Dummy FS Directory
    make install \
        install_root=$GLIBC_FULL \
        $MAKEFLAGS

    mkdir -p localedata/install-locales/usr/lib/locale
    make localedata/install-locales\
        SUPPORTED-LOCALES="en_US.UTF-8/UTF-8 ja_JP.UTF-8/UTF-8" \
        install_root=$GLIBC_FULL

    # Copy Dynamic Linker Library (ld)
    mkdir -p $FS/lib
    cp -r $GLIBC_FULL/lib/ld-* $FS/lib
    
    # Copy and Dynamically Link the Libraries
    currDir=$(pwd)

    # so.0
    for i in "${SO0[@]}"; do
        cp $GLIBC_FULL/lib/$i.so.0 $FS/lib/
        cd $FS/lib
        ln -s $i.so.0 $i.so
        cd $currDir
    done
    # so.1
    for i in "${SO1[@]}"; do
        cp $GLIBC_FULL/lib/$i.so.1 $FS/lib/
        cd $FS/lib
        ln -s $i.so.1 $i.so
        cd $currDir
    done
    # so.2
    for i in "${SO2[@]}"; do
        cp $GLIBC_FULL/lib/$i.so.2 $FS/lib/
        cd $FS/lib
        ln -s $i.so.2 $i.so
        cd $currDir
    done
    # so.6
    for i in "${SO6[@]}"; do
        cp $GLIBC_FULL/lib/$i.so.6 $FS/lib/
        cd $FS/lib
        ln -s $i.so.6 $i.so
        cd $currDir
    done

    echo ""
    echo "+========================+"
    echo "| GNU C Library Compiled |"
    echo "+========================+"
}
