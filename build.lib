#=====================================
# natick Build System - Build Library
#=====================================
# Copyright (C) 2021 AJ Barris (AwlsomeAlex)
# aj at awlsome dot com
# ISC License - All Rights Reserved
#=====================================

# prepare_tarball($1: url, $2: destination)
function prepare_tarball() {
    local archive=$(baseurl ${url})

    # Download tarball
    if [[ ! -f ${SOURCE_DIR}/${archive} ]]; then
        wait_print "Downloading ${archive}"
        wget -q --show-progress ${url} -P ${SOURCE_DIR}
    else
        done_print "${archive} already downloaded."
    fi

    # Checksum tarball
    (cd ${SOURCE_DIR} && echo "${shasum}  ${archive}" } sha256sum -c -) > /dev/null || { 
        rm ${SOURCE_DIR}/${archive}
        fail_print "Bad Checksum: ${archive}: ${sum}"
    }

    # Untar tarball
    wait_print "Extracting ${archive}"
    pv ${SOURCE_DIR}/${archive} | bsdtar -xf - -C ${WORK_DIR}/host/
    # ^^ TODO: host shouldn't be hard pathed ^^ #
}

# build_host_package(): Builds a package that'll be used by natick
#                       Build System. These packages are usually
#                       reserved for the toolchain and helpers
function build_host_package() {
    local pkg_name=${1}

    source ${PACKAGE_DIR}/${pkg_name}.btr

    # Some packages might be extensions of others. Download could be redundant
    mkdir ${WORK_DIR}/host/${name}-${version}
    if [[ ! -z ${url} ]]; then
        prepare_tarball ${url} host
    fi
    if [[ ${name} == "musl-headers" ]]; then
        cd ${WORK_DIR}/host/musl-${version}
    else
        cd ${WORK_DIR}/host/${name}-${version}
    fi

    # Build package
    wait_print "Compiling ${name}"
    echo "START - $(date)" >> ${WORK_DIR}/host/${name}-${version}/nbs.log 2>&1
    host_configure >> ${WORK_DIR}/host/${name}-${version}/nbs.log 2>&1
    host_build >> ${WORK_DIR}/host/${name}-${version}/nbs.log 2>&1
    host_install >> ${WORK_DIR}/host/${name}-${version}/nbs.log 2>&1
    echo "STOP - $(date)" >> ${WORK_DIR}/host/${name}-${version}/nbs.log 2>&1
    done_print "Compiled ${name}."
    echo ""
}
